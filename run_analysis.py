#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞
"""

import sys
import os
sys.path.append('src')

from fraud_analyzer import FraudAnalyzer
from data_loader import DataLoader
import json

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞"""

    print("üîç –ê–ù–ê–õ–ò–ó –ú–û–®–ï–ù–ù–ò–ß–ï–°–¢–í–ê –í –§–ò–ù–ê–ù–°–û–í–´–• –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø–•")
    print("=" * 60)

    # –ü—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º
    transaction_path = 'data/transaction_fraud_data.parquet'
    exchange_path = 'data/historical_currency_exchange.parquet'

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    if not os.path.exists(transaction_path):
        print(f"‚ùå –§–∞–π–ª {transaction_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    if not os.path.exists(exchange_path):
        print(f"‚ùå –§–∞–π–ª {exchange_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
        print("üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...")
        analyzer = FraudAnalyzer(transaction_path, exchange_path)

        # –†–∞—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫
        print("üßÆ –†–∞—Å—á–µ—Ç –∫–ª—é—á–µ–≤—ã—Ö –±–∏–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫...")
        metrics, risk_scores = analyzer.save_results('results')

        # –í—ã–≤–æ–¥ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        print("\n" + "=" * 60)
        print("üìà –û–°–ù–û–í–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê")
        print("=" * 60)

        # –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        financial = metrics['financial']
        print(f"üí∞ –û–±—â–∏–µ –ø–æ—Ç–µ—Ä–∏ –æ—Ç –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞: ${financial['total_fraud_loss_usd']:,.2f}")
        print(f"üìä –î–æ–ª—è –ø–æ—Ç–µ—Ä—å –æ—Ç –æ–±–æ—Ä–æ—Ç–∞: {financial['fraud_loss_percentage']:.2f}%")
        print(f"üí≥ –°—Ä–µ–¥–Ω—è—è –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: ${financial['average_fraud_amount_usd']:,.2f}")
        print(f"üî¢ –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –±–æ–ª—å—à–µ –ª–µ–≥–∏—Ç–∏–º–Ω—ã—Ö –≤ {financial['fraud_amount_multiplier']:.1f}x —Ä–∞–∑")

        # –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        operational = metrics['operational']
        print(f"\nüè¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {operational['total_transactions']:,}")
        print(f"‚ö†Ô∏è  –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {operational['fraud_transactions']:,}")
        print(f"üìà –£—Ä–æ–≤–µ–Ω—å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞: {operational['fraud_rate_percentage']:.1f}%")
        print(f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: {operational['unique_customers']:,}")

        # –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏
        geographic = metrics['geographic_risk']
        print(f"\nüåç –°—Ç—Ä–∞–Ω —Å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ–º: {geographic['countries_with_fraud']}")
        print(f"üö® –í—ã—Å–æ–∫–æ—Ä–∏—Å–∫–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω (>30%): {geographic['high_risk_countries_count']}")

        # –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏
        behavioral = metrics['behavioral']
        print(f"\nüë§ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: {behavioral['high_activity_customers_count']} ({behavioral['high_activity_customers_percentage']:.1f}%)")
        print(f"üéØ –£—Ä–æ–≤–µ–Ω—å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞ —Å—Ä–µ–¥–∏ –Ω–∏—Ö: {behavioral['high_activity_fraud_rate']:.1%}")

        # –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è
        potential = metrics['potential_impact']
        print(f"\nüí° –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–ê–Ø –≠–ö–û–ù–û–ú–ò–Ø:")
        print(f"   –ü—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ –Ω–∞ 50%: ${potential['potential_savings_50_percent_usd']:,.2f}")
        print(f"   –ü—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ –Ω–∞ 80%: ${potential['potential_savings_80_percent_usd']:,.2f}")
        print(f"   –ü—Ä–æ–≥–Ω–æ–∑ –≥–æ–¥–æ–≤—ã—Ö –ø–æ—Ç–µ—Ä—å: ${potential['annual_fraud_loss_projection_usd']:,.2f}")

        print("\n" + "=" * 60)
        print("‚úÖ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print("üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫—É 'results/'")
        print("üìä –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç: results/executive_summary.md")
        print("üìà –ú–µ—Ç—Ä–∏–∫–∏: results/business_metrics.json")
        print("üéØ –†–∏—Å–∫-—Å–∫–æ—Ä—ã: results/risk_scores.json")
        print("=" * 60)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()